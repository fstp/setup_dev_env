#! /usr/bin/env bash
# vim: ft=sh
set -eu
set -o pipefail

# Optional source filter argument
source_filter="${1:-}"

temp="$(mktemp)"
trap 'rm "$temp"' EXIT

{
curl -sL https://www.svt.se/rss.xml | \
  yq -p xml -o json | \
  jq -c '.rss.channel.item[] | {
    source: "SVT", 
    title, 
    link, 
    date: (.pubDate | strptime("%a, %d %b %Y %H:%M:%S %z") | mktime), 
    description
  }' || echo "Failed to fetch SVT feed" >&2;
curl -sL https://rss.aftonbladet.se/rss2/small/pages/sections/senastenytt | \
  yq -p xml -o json | \
  jq -c '.rss.channel.item[] | {
    source: "Aftonbladet",
    title,
    link,
    date: (.pubDate | strptime("%a, %d %b %Y %H:%M:%S GMT") | mktime),
    description
  }' || echo "Failed to fetch Aftonbladet feed" >&2;
curl -sL https://www.tv4.se/rss | \
  yq -p xml -o json | \
  jq -c '.rss.channel.item[] | {
    source: "TV4",
    title,
    link,
    date: (.pubDate | strptime("%a, %d %b %Y %H:%M:%S GMT") | mktime),
    description: (.description // "" | gsub("<p>|</p>"; ""))
  }' || echo "Failed to fetch TV4 feed" >&2;
# curl -sL https://www.svd.se/feed/articles.rss | \
#   yq -p xml -o json | \
#   jq -c '.rss.channel.item[] | {
#     source: "SvD",
#     title,
#     link,
#     date: (.pubDate | strptime("%a, %d %b %Y %H:%M:%S %z") | mktime),
#     description: (.description // "" | gsub("<p>|</p>"; ""))
#   }' || echo "Failed to fetch SvD feed" >&2;
} >> "$temp"

jq -s --arg source "$source_filter" \
  'sort_by(.date) | reverse | 
  if $source == "" then
    .
  else
    map(select(.source | ascii_downcase == ($source | ascii_downcase)))
  end |
  .[].date |= strftime("%a, %d %b %Y %H:%M:%S %z") | .[]' <"$temp" | jless
