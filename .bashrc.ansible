#!/usr/bin/bash
# vi:set ft=sh

export VISUAL=nvim
export EDITOR=${VISUAL}

export PATH="$HOME/bin:$PATH"
export ASDF_DATA_DIR="$HOME/.asdf"
export PATH="$ASDF_DATA_DIR/shims:$PATH"

# . "$HOME/.asdf/asdf.sh"
# . "$HOME/.asdf/completions/asdf.bash"

source /usr/share/doc/fzf/examples/key-bindings.bash || true

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1_000_000
HISTFILESIZE=1_000_000

# Avoid duplicates
HISTCONTROL=ignoredups:erasedups

# When the shell exits, append to the history file instead of overwriting it
shopt -s histappend

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

export FZF_DEFAULT_OPTS="--bind \
ctrl-y:preview-up,ctrl-e:preview-down,\
ctrl-b:preview-page-up,ctrl-f:preview-page-down,\
ctrl-u:preview-half-page-up,ctrl-d:preview-half-page-down,\
ctrl-o:toggle-preview\
 --preview 'if [ -d "{}" ]; then tree -C "{}"; else bat --style=numbers --color=always --line-range :500 "{}"; fi'\
 -m"

# CTRL-Y to copy the command into clipboard using pbcopy
export FZF_CTRL_R_OPTS=" \
  --bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort' \
  --color header:italic \
  --preview-window=:hidden \
  --height 60% \
  --header 'Press CTRL-Y to copy command into clipboard'"

export FZF_ALT_C_COMMAND="fd --type d --hidden --no-ignore-vcs --exclude .git --exclude node_modules --exclude target"
export FZF_ALT_C_OPTS="--preview 'tree -C {}'"

# 1. Search for text in files using Ripgrep
# 2. Interactively narrow down the list using fzf
# 3. Open the file in Vim
rfv() {
  rg --color=always --colors="match:fg:magenta" --line-number --hidden --no-heading --smart-case "${@:-}" |
    fzf --ansi \
    --color "dark" \
    --delimiter : \
    --preview 'bat --color=always {1} --highlight-line {2}' \
    --preview-window 'up,60%,border-bottom,+{2}+3/3,~3' \
    --bind 'enter:execute(nvim {1} +{2})'
}

ffv() {
  fd --type f --hidden --no-ignore-vcs --exclude .git --exclude node_modules --exclude target |
    fzf --ansi \
    --color "dark" \
    --delimiter : \
    --preview 'bat -p --color=always {1}' \
    --preview-window 'up,60%,border-bottom,+{2}+3/3,~3' \
    --bind 'enter:execute(nvim {1})'
}

glf() {
  git log --oneline --decorate --color=always --no-merges "$@" | \
    fzf -m --ansi --color=dark --no-sort \
    --preview='echo {} | cut -d " " -f 1 | xargs git show --color=always' \
    --preview-window 'up,60%,border-bottom,+{2}+3/3,~3' \
    --bind 'enter:execute(printf "%s\n" {+} | cut -d " " -f 1 | xargs git show --color=always | bat --paging=always)'
}

eval "$(zoxide init bash)"

# Git aliases
alias gds='git diff --staged'
alias gd='git diff'
alias gs='git status'
alias gau='git add -u'
alias gl='git log --oneline --graph --decorate'
alias gco='git checkout'
alias gc='git commit'
alias gf='git fetch'
alias gca='git commit -C HEAD --amend'
alias gb='git branch'

alias tree='tree -A -h -C'

tvn() {
  local arg="${1:-files}"
  tv "$arg" | sed -e 's/:/ \+/g' | while read -r first second; do
    if [ -n "${second// /}" ]; then
      nvim "$first" "$second"
    else
      nvim "$first"
    fi
  done
}

alias fdg='fd -I -H -g'
alias fdr='fd -I -H --regex'

# Shortcuts for virtualenv
alias ac='source venv/bin/activate'
alias dc='deactivate'

# LLM shortcuts
alias llm='llm -m gemini-flash-latest'

# OpenMP env variables for BLIS (https://github.com/ggml-org/llama.cpp/blob/master/docs/backend/BLIS.md)
export OMP_PROC_BIND=close
export OMP_PLACES=cores
export BLIS_NUM_THREADS=16

# CUDA stuff
export PATH=/usr/local/cuda/bin:$PATH
export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH

# Add current git branch to command prompt
parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
export PS1='\[\033[92m\]\u@\h\[\033[00m\] \[\033[32m\]\w\[\033[33m\]$(parse_git_branch)\[\033[00m\] $ '
